$date
	Tue May 28 18:47:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 3 & WRITEREG [2:0] $end
$var wire 8 ' TWOSOUT [7:0] $end
$var wire 8 ( REGOUT2 [7:0] $end
$var wire 3 ) READREG2 [2:0] $end
$var wire 3 * READREG1 [2:0] $end
$var wire 8 + NEGMUXOUT [7:0] $end
$var wire 8 , IMMEDIATE [7:0] $end
$var wire 8 - DATA2 [7:0] $end
$var wire 8 . DATA1 [7:0] $end
$var wire 8 / ALURESULT [7:0] $end
$var reg 3 0 ALUOP [2:0] $end
$var reg 1 1 IMSELECT $end
$var reg 1 2 NEGSELECT $end
$var reg 8 3 OPCODE [7:0] $end
$var reg 32 4 PC [31:0] $end
$var reg 32 5 PCADDED [31:0] $end
$var reg 1 6 WRITEENABLE $end
$scope module cpu_alu $end
$var wire 3 7 Select [2:0] $end
$var wire 8 8 orWire [7:0] $end
$var wire 8 9 forwardWire [7:0] $end
$var wire 8 : andWire [7:0] $end
$var wire 8 ; addWire [7:0] $end
$var wire 8 < Data2 [7:0] $end
$var wire 8 = Data1 [7:0] $end
$var reg 8 > Result [7:0] $end
$scope module addUnit $end
$var wire 8 ? Result [7:0] $end
$var wire 8 @ Data2 [7:0] $end
$var wire 8 A Data1 [7:0] $end
$upscope $end
$scope module andUnit $end
$var wire 8 B Result [7:0] $end
$var wire 8 C Data2 [7:0] $end
$var wire 8 D Data1 [7:0] $end
$upscope $end
$scope module forwardUnit $end
$var wire 8 E Result [7:0] $end
$var wire 8 F Data2 [7:0] $end
$upscope $end
$scope module orUnit $end
$var wire 8 G Result [7:0] $end
$var wire 8 H Data2 [7:0] $end
$var wire 8 I Data1 [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_im_mux $end
$var wire 8 J IN2 [7:0] $end
$var wire 1 1 SELECT $end
$var wire 8 K IN1 [7:0] $end
$var reg 8 L OUT [7:0] $end
$upscope $end
$scope module cpu_neg_mux $end
$var wire 1 2 SELECT $end
$var wire 8 M IN2 [7:0] $end
$var wire 8 N IN1 [7:0] $end
$var reg 8 O OUT [7:0] $end
$upscope $end
$scope module cpu_reg_file $end
$var wire 1 # CLK $end
$var wire 8 P IN [7:0] $end
$var wire 3 Q INADDRESS [2:0] $end
$var wire 32 R INSTRUCTION [31:0] $end
$var wire 3 S OUT1ADDRESS [2:0] $end
$var wire 3 T OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 6 WRITE $end
$var reg 8 U REGOUT1 [7:0] $end
$var reg 8 V REGOUT2 [7:0] $end
$var integer 32 W i [31:0] $end
$upscope $end
$scope module cpu_tc $end
$var wire 8 X IN [7:0] $end
$var wire 8 Y OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
1$
0#
bx "
bx !
$end
#4
1#
#5
b1000 W
b0 !
b0 4
0$
#6
b100 5
#7
b0 &
b0 Q
b0 *
b0 S
b101 )
b101 T
b101 -
b101 <
b101 @
b101 C
b101 F
b101 H
b101 L
b101 ,
b101 J
b0 3
b101 "
b101 %
b101 R
#8
b101 /
b101 >
b101 P
bx1x1 8
bx1x1 G
b0x0x :
b0x0x B
b101 9
b101 E
16
02
11
b0 0
b0 7
0#
#12
1#
#13
b100 !
b100 4
#14
b1000 5
#15
b1 &
b1 Q
b1 )
b1 T
b1001 -
b1001 <
b1001 @
b1001 C
b1001 F
b1001 H
b1001 L
b1001 ,
b1001 J
b10000000000001001 "
b10000000000001001 %
b10000000000001001 R
#16
bx1xx1 8
bx1xx1 G
b0x00x :
b0x00x B
b1001 9
b1001 E
0#
#17
b1001 /
b1001 >
b1001 P
b0 +
b0 K
b0 O
b0 (
b0 N
b0 V
b0 X
b101 .
b101 =
b101 A
b101 D
b101 I
b101 U
#18
b0 '
b0 M
b0 Y
b1101 8
b1101 G
b1 :
b1 B
#19
b1110 ;
b1110 ?
#20
1#
#21
b1000 !
b1000 4
#22
b1100 5
#23
b10 &
b10 Q
b1 -
b1 <
b1 @
b1 C
b1 F
b1 H
b1 L
b1 ,
b1 J
b1 3
b1000000100000000000000001 "
b1000000100000000000000001 %
b1000000100000000000000001 R
#24
b1 /
b1 >
b1 P
b0 -
b0 <
b0 @
b0 C
b0 F
b0 H
b0 L
b101 8
b101 G
b1 9
b1 E
01
0#
#25
b0 /
b0 >
b0 P
b1001 -
b1001 <
b1001 @
b1001 C
b1001 F
b1001 H
b1001 L
b1001 +
b1001 K
b1001 O
b1001 (
b1001 N
b1001 V
b1001 X
b0 :
b0 B
b0 9
b0 E
#26
b11110111 '
b11110111 M
b11110111 Y
b1101 8
b1101 G
b1 :
b1 B
b1001 9
b1001 E
#28
1#
#29
b1100 !
b1100 4
#30
b10000 5
#31
b11 &
b11 Q
b10 *
b10 S
b0 )
b0 T
b0 ,
b0 J
b10 3
b10000000110000001000000000 "
b10000000110000001000000000 %
b10000000110000001000000000 R
#32
b1110 /
b1110 >
b1110 P
b1 0
b1 7
0#
#36
1#
#37
b10000 !
b10000 4
#38
b10100 5
#39
b100 &
b100 Q
b11 *
b11 S
b1 )
b1 T
b1 ,
b1 J
b11 3
b11000001000000001100000001 "
b11000001000000001100000001 %
b11000001000000001100000001 R
#40
b11110111 -
b11110111 <
b11110111 @
b11110111 C
b11110111 F
b11110111 H
b11110111 L
b11110111 +
b11110111 K
b11110111 O
12
0#
#41
b101 (
b101 N
b101 V
b101 X
b0 .
b0 =
b0 A
b0 D
b0 I
b0 U
b11110111 8
b11110111 G
b101 :
b101 B
b11110111 9
b11110111 E
#42
b11111011 -
b11111011 <
b11111011 @
b11111011 C
b11111011 F
b11111011 H
b11111011 L
b11111011 +
b11111011 K
b11111011 O
b11111011 '
b11111011 M
b11111011 Y
b0 :
b0 B
#43
b11111011 8
b11111011 G
b11111011 9
b11111011 E
#44
b11111011 ;
b11111011 ?
1#
#45
b10100 !
b10100 4
#46
b11000 5
#47
b0 &
b0 Q
b0 *
b0 S
b101 )
b101 T
b1110101 ,
b1110101 J
b0 3
b1110101 "
b1110101 %
b1110101 R
#48
b101 +
b101 K
b101 O
b1110101 -
b1110101 <
b1110101 @
b1110101 C
b1110101 F
b1110101 H
b1110101 L
b11111011 /
b11111011 >
b11111011 P
02
11
b0 0
b0 7
0#
#49
b1110101 /
b1110101 >
b1110101 P
b1001 +
b1001 K
b1001 O
b1001 (
b1001 N
b1001 V
b1001 X
b1110 .
b1110 =
b1110 A
b1110 D
b1110 I
b1110 U
b1110101 8
b1110101 G
b1110101 9
b1110101 E
#50
b11110111 '
b11110111 M
b11110111 Y
b1111111 8
b1111111 G
b100 :
b100 B
#51
b10000011 ;
b10000011 ?
#52
1#
#53
b11000 !
b11000 4
#54
b11100 5
#55
b1 &
b1 Q
b10 )
b10 T
b10010010 -
b10010010 <
b10010010 @
b10010010 C
b10010010 F
b10010010 H
b10010010 L
b10010010 ,
b10010010 J
b10000000010010010 "
b10000000010010010 %
b10000000010010010 R
#56
b10011110 8
b10011110 G
b10 :
b10 B
b10010010 9
b10010010 E
0#
#57
b10010010 /
b10010010 >
b10010010 P
b0 +
b0 K
b0 O
b0 (
b0 N
b0 V
b0 X
b1110101 .
b1110101 =
b1110101 A
b1110101 D
b1110101 I
b1110101 U
b10100000 ;
b10100000 ?
#58
b0 '
b0 M
b0 Y
b11110111 8
b11110111 G
b10000 :
b10000 B
#59
b111 ;
b111 ?
#60
1#
#61
b11100 !
b11100 4
#62
b100000 5
#63
b101 &
b101 Q
b1 *
b1 S
b0 )
b0 T
b0 -
b0 <
b0 @
b0 C
b0 F
b0 H
b0 L
b0 ,
b0 J
b100 3
b100000001010000000100000000 "
b100000001010000000100000000 %
b100000001010000000100000000 R
#64
b0 /
b0 >
b0 P
b1110101 8
b1110101 G
b0 :
b0 B
b0 9
b0 E
01
b10 0
b10 7
0#
#65
b1110101 ;
b1110101 ?
#68
1#
#69
b100000 !
b100000 4
#70
b100100 5
#71
b110 &
b110 Q
b101 *
b101 S
b10 )
b10 T
b10 ,
b10 J
b101 3
b101000001100000010100000010 "
b101000001100000010100000010 %
b101000001100000010100000010 R
#72
b1110101 /
b1110101 >
b1110101 P
b11 0
b11 7
0#
#73
b1110101 -
b1110101 <
b1110101 @
b1110101 C
b1110101 F
b1110101 H
b1110101 L
b1110101 +
b1110101 K
b1110101 O
b1110101 (
b1110101 N
b1110101 V
b1110101 X
b10010010 .
b10010010 =
b10010010 A
b10010010 D
b10010010 I
b10010010 U
#74
b10001011 '
b10001011 M
b10001011 Y
b11110111 8
b11110111 G
b10000 :
b10000 B
b1110101 9
b1110101 E
#75
b111 ;
b111 ?
#76
1#
#77
b100100 !
b100100 4
#78
b101000 5
#79
bx &
bx Q
bx *
bx S
bx )
bx T
bx ,
bx J
bx 3
bx "
bx %
bx R
#80
0#
#81
b11110111 /
b11110111 >
b11110111 P
b0 -
b0 <
b0 @
b0 C
b0 F
b0 H
b0 L
b0 +
b0 K
b0 O
b0 (
b0 N
b0 V
b0 X
b0 .
b0 =
b0 A
b0 D
b0 I
b0 U
#82
b0 '
b0 M
b0 Y
b0 8
b0 G
b0 :
b0 B
b0 9
b0 E
#83
b0 ;
b0 ?
#84
1#
#85
b101000 !
b101000 4
#86
b101100 5
#88
0#
#92
1#
#93
b101100 !
b101100 4
#94
b110000 5
#96
0#
#100
1#
#101
b110000 !
b110000 4
#102
b110100 5
#104
0#
#108
1#
#109
b110100 !
b110100 4
#110
b111000 5
#112
0#
#116
1#
#117
b111000 !
b111000 4
#118
b111100 5
#120
0#
#124
1#
#125
b111100 !
b111100 4
#126
b1000000 5
#128
0#
#132
1#
#133
b1000000 !
b1000000 4
#134
b1000100 5
#136
0#
#140
1#
#141
b1000100 !
b1000100 4
#142
b1001000 5
#144
0#
#148
1#
#149
b1001000 !
b1001000 4
#150
b1001100 5
#152
0#
#156
1#
#157
b1001100 !
b1001100 4
#158
b1010000 5
#160
0#
#164
1#
#165
b1010000 !
b1010000 4
#166
b1010100 5
#168
0#
#172
1#
#173
b1010100 !
b1010100 4
#174
b1011000 5
#176
0#
#180
1#
#181
b1011000 !
b1011000 4
#182
b1011100 5
#184
0#
#188
1#
#189
b1011100 !
b1011100 4
#190
b1100000 5
#192
0#
#196
1#
#197
b1100000 !
b1100000 4
#198
b1100100 5
#200
0#
#204
1#
#205
b1100100 !
b1100100 4
#206
b1101000 5
#208
0#
#212
1#
#213
b1101000 !
b1101000 4
#214
b1101100 5
#216
0#
#220
1#
#221
b1101100 !
b1101100 4
#222
b1110000 5
#224
0#
#228
1#
#229
b1110000 !
b1110000 4
#230
b1110100 5
#232
0#
#236
1#
#237
b1110100 !
b1110100 4
#238
b1111000 5
#240
0#
#244
1#
#245
b1111000 !
b1111000 4
#246
b1111100 5
#248
0#
#252
1#
#253
b1111100 !
b1111100 4
#254
b10000000 5
#256
0#
#260
1#
#261
b10000000 !
b10000000 4
#262
b10000100 5
#264
0#
#268
1#
#269
b10000100 !
b10000100 4
#270
b10001000 5
#272
0#
#276
1#
#277
b10001000 !
b10001000 4
#278
b10001100 5
#280
0#
#284
1#
#285
b10001100 !
b10001100 4
#286
b10010000 5
#288
0#
#292
1#
#293
b10010000 !
b10010000 4
#294
b10010100 5
#296
0#
#300
1#
#301
b10010100 !
b10010100 4
#302
b10011000 5
#304
0#
#305
